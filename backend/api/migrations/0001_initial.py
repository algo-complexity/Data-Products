# Generated by Django 4.1.3 on 2022-11-14 03:52

import django.contrib.postgres.indexes
import django.db.models.deletion
from django.contrib.postgres.operations import TrigramExtension
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        TrigramExtension(),
        migrations.CreateModel(
            name="Indicator",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                ("value", models.DecimalField(decimal_places=5, max_digits=20)),
            ],
        ),
        migrations.CreateModel(
            name="News",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("headline", models.TextField()),
                ("content", models.TextField()),
                ("url", models.URLField()),
                ("sentiment", models.TextField(null=True)),
                ("summary", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Price",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("open", models.DecimalField(decimal_places=5, max_digits=20)),
                ("high", models.DecimalField(decimal_places=5, max_digits=20)),
                ("low", models.DecimalField(decimal_places=5, max_digits=20)),
                ("close", models.DecimalField(decimal_places=5, max_digits=20)),
                ("timestamp", models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name="Reddit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("api_id", models.TextField(unique=True)),
                ("title", models.TextField()),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField()),
                ("author", models.TextField()),
                ("sentiment", models.TextField(null=True)),
                ("score", models.IntegerField()),
                ("num_comments", models.IntegerField()),
                ("url", models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                ("ticker", models.CharField(max_length=4, unique=True)),
                ("summary", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Tweet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField()),
                ("timestamp", models.DateTimeField()),
                ("author", models.TextField()),
                ("sentiment", models.TextField(null=True)),
                ("retweets", models.PositiveIntegerField()),
                ("comments", models.PositiveIntegerField()),
                ("likes", models.PositiveIntegerField()),
                ("hashtags", models.TextField()),
                ("url", models.URLField()),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.stock"
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="stock",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["name"], name="stock_name_gin_idx", opclasses=["gin_trgm_ops"]
            ),
        ),
        migrations.AddField(
            model_name="reddit",
            name="stock",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.stock"
            ),
        ),
        migrations.AddField(
            model_name="price",
            name="stock",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.stock"
            ),
        ),
        migrations.AddField(
            model_name="news",
            name="stock",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.stock"
            ),
        ),
        migrations.AddField(
            model_name="indicator",
            name="stock",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.stock"
            ),
        ),
        migrations.AddIndex(
            model_name="indicator",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["name"],
                name="indicator_name_gin_idx",
                opclasses=["gin_trgm_ops"],
            ),
        ),
    ]
